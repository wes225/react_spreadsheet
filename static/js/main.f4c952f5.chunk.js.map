{"version":3,"sources":["redux/actions.js","spreadsheet/misc/keys.js","spreadsheet/misc/eventHandlers.js","spreadsheet/Cell.js","spreadsheet/Row.js","spreadsheet/misc/TableHeader.js","spreadsheet/Sheet.js","App.js","redux/spreadsheetReducer.js","spreadsheet/misc/tableConfig.js","redux/reducers.js","redux/store.js","index.js"],"names":["saveCell","cell","type","toggleSelectCell","coord","selectCell","apiKey","getWeather","city","requestingCell","dispatch","newX","x","cityName","fetch","concat","then","response","json","main","temp","error","console","log","getCityWeather","Object","objectSpread","value","tempValue","inEdit","handleCellKeyPress","e","props","isSelected","ctrlKey","which","enterEditContent","totalColumns","getContentWeather","target","saveCellContent","cancelEditContent","unSelectAllContent","handleDoubleClick","onInputChange","handleTableKeyDown","selectAllContent","deletedSelectedContent","handleMouseEnter","_mouseEnter","handleMouseDown","d_mouseDown","toggleSelectContent","handleSingleClick","handleMouseUp","d_mouseUp","Cell","_this","react_default","a","createElement","onMouseEnter","this","autoFocus","onKeyDown","onChange","defaultValue","tabIndex","onMouseDown","onMouseUp","onDoubleClick","style","backgroundColor","React","Component","connect","state","ownProps","spreadsheetState","table","y","length","isMouseDown","editCell","selectContent","save","cancelEditCellWithSave","mouseEnterCell","mouseDown","mouseUp","areStatePropsEqual","oldProp","newProp","Row","row","map","index","spreadsheet_Cell","key","PureComponent","TableHeader","headerGenerator","columns","col","myHeaders","alphabet","toUpperCase","split","alphabetIndex","loop","j","push","Sheet","data","Row_Row","App","spreadsheet_Sheet","INITIAL_STATE","rows","i","column","selectedCells","selectionSquare","initializeState","modifyCell","newCell","assign","modifySelection","status","action","newSquare","getSelectionSquare","newTable","square","x0","x1","y0","y1","changeCoveredCells","keys","_x","_y","toggleSelect","toggleCell","select","cancel","cancelCellEdit","emptySelected","deleteSelectedCells","spreadsheetReducer","arguments","undefined","edit","selectAll","unselectAll","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","rootReducers","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4c952f5.chunk.js","sourcesContent":["export const TOGGLE_CELL_SELECT = \"TOGGLE_CELL_SELECT\"\r\nexport const SELECT_CELL = \"SELECT_CELL\"\r\nexport const SELECT_ALL = \"SELECT_ALL\";\r\nexport const UNSELECT_ALL = \"UNSELECT_ALL\";\r\nexport const SAVE_CELL_CONTENT = \"SAVE_CELL_CONTENT\";\r\nexport const DELETE_SELECTED_CELLS = \"DELETE_SELECTED_CELLS\";\r\nexport const EDIT_CELL = \"EDIT_CELL\";\r\nexport const CANCEL_EDIT_CELL = \"CANCEL_EDIT_CELL\";\r\nexport const EDIT_SELECTED_CELL = \"EDIT_SELECTED_CELLS\";\r\n\r\n\r\n\r\nexport const saveCell = cell => ({\r\n    type: SAVE_CELL_CONTENT,\r\n    cell\r\n});\r\nexport const editCell = cell => ({\r\n    type: EDIT_CELL,\r\n    cell\r\n});\r\nexport const cancelEditCellWithSave = (save) => ({\r\n    type: CANCEL_EDIT_CELL,\r\n    save\r\n})\r\nexport const deleteSelectedCells = () => ({\r\n    type: DELETE_SELECTED_CELLS\r\n});\r\nexport const toggleSelectCell = coord => ({\r\n    type: TOGGLE_CELL_SELECT,\r\n    coord\r\n})\r\nexport const selectCell = coord => ({\r\n    type: SELECT_CELL,\r\n    coord\r\n})\r\nexport const selectAll = () => ({\r\n    type: SELECT_ALL\r\n})\r\nexport const unSelectAll = () => ({\r\n    type: UNSELECT_ALL\r\n})\r\nexport const editSelected = () => ({\r\n    type: EDIT_SELECTED_CELL\r\n})\r\n\r\n\r\nexport const ON_MOUSE_DOWN ='ON_MOUSE_DOWN';\r\nexport const ON_MOUSE_UP ='ON_MOUSE_UP' ;\r\nexport const MOUSE_ENTER_CELL = 'MOUSE_ENTER_CELL';\r\n\r\nexport const mouseDown = (cell) => ({type:ON_MOUSE_DOWN, cell:cell})\r\nexport const mouseUp = (cell) => ({type:ON_MOUSE_UP, cell:cell})\r\nexport const mouseEnterCell = (cell) =>({type:MOUSE_ENTER_CELL, cell:cell})\r\n\r\n\r\n// Weather Section\r\nconst apiKey = '8d76f2f18d23abbac32fec7038fb665c'\r\nexport function getWeather(city, requestingCell) {\r\n    return dispatch => {\r\n          let newX = requestingCell.x + 1\r\n        getCityWeather(city).then(temp => {\r\n\r\n  // Modifies the cell on the right of the city name\r\n         dispatch(saveCell({ ...requestingCell,\r\n            x: newX,\r\n            value: temp+\"°C\" , tempValue:temp+\"°C \", inEdit:false\r\n        })) ;\r\n        \r\n        });  \r\n       \r\n    }\r\n}\r\n\r\n function getCityWeather(cityName) {\r\n     try {\r\n    \r\n    return    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${apiKey}&units=metric`)\r\n        .then(response =>  response.json()\r\n        .then(json=> json.main.temp))\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n","export const ENTER_KEY = 13\r\nexport const TAB_KEY = 9\r\nexport const ESCAPE_KEY = 27\r\nexport const DELETE_KEY = 46\r\nexport const BACKSPACE_KEY = 8\r\nexport const A_KEY = 65"," import {ENTER_KEY, ESCAPE_KEY,A_KEY,BACKSPACE_KEY,DELETE_KEY} from './keys'\r\n \r\n // Handles selected one or multiple cases.\r\n export const handleSingleClick = (e, props) => {\r\nconsole.log(props)\r\n     props\r\n         .cancelEditContent(true)\r\n     if (e.ctrlKey) {\r\n         props\r\n             .toggleSelectContent({\r\n                 ...props.cell,\r\n                 inEdit: false,\r\n                 isSelected: !props.cell.isSelected\r\n             })\r\n     } else {\r\n         props\r\n             .unSelectAllContent();\r\n         props\r\n             .toggleSelectContent({\r\n                 ...props.cell,\r\n                 inEdit: false,\r\n                 isSelected: !props.cell.isSelected\r\n             })\r\n     }\r\n }\r\n\r\n\r\n export const handleCellKeyPress = (e, props) => {\r\n\r\n\r\n     // To finish; will help editing once a case is selected.\r\n     if (props.cell.isSelected && !e.ctrlKey && e.which !== DELETE_KEY) {\r\n         console.log(e)\r\n         props\r\n             .enterEditContent({\r\n                 ...props.cell,\r\n                 inEdit: true\r\n             });\r\n     } else if (props.cell.inEdit) {\r\n\r\n         // Get Weather condition\r\n         if (e.which === ENTER_KEY && e.ctrlKey) {\r\n             if (props.cell.x < props.totalColumns) {\r\n                 props\r\n                     .getContentWeather(e.target.value, props.cell)\r\n                 props\r\n                     .saveCellContent({\r\n                         ...props.cell,\r\n                         value: e.target.value,\r\n                         inEdit: false\r\n                     })\r\n             }\r\n         }\r\n         // Saves change made to cell\r\n         if (e.which === ENTER_KEY) {\r\n             props\r\n                 .saveCellContent({\r\n                     ...props.cell,\r\n                     value: e.target.value,\r\n                     inEdit: false\r\n                 })\r\n         }\r\n\r\n         //Cancel changes\r\n         if (e.which === ESCAPE_KEY) {\r\n             props\r\n                 .cancelEditContent(false);\r\n             props\r\n                 .unSelectAllContent();\r\n         }\r\n     }\r\n }\r\n\r\n //Enters edit mode for the cell\r\n export const handleDoubleClick = (e, props) => {\r\n     props\r\n         .cancelEditContent(true)\r\n     props\r\n         .enterEditContent({\r\n             ...props.cell,\r\n             inEdit: true\r\n         });\r\n     props\r\n         .unSelectAllContent();\r\n }\r\n\r\n\r\n // Saves current input, for when user clicks away to save\r\n export const onInputChange = (e, props) => {\r\n     props\r\n         .saveCellContent({\r\n             ...props.cell,\r\n             tempValue: e.target.value\r\n         })\r\n }\r\n\r\n export const handleTableKeyDown = (e,props) => {\r\n\r\n  if (e.ctrlKey) {\r\n    if (e.which === A_KEY) {\r\n     props\r\n        .selectAllContent()\r\n    }\r\n  }\r\n  if (e.which === DELETE_KEY || e.which === BACKSPACE_KEY) {\r\n   props\r\n      .deletedSelectedContent({})\r\n  }\r\n}\r\n\r\nexport const handleMouseEnter = (e, props) => {\r\n    props._mouseEnter(props.cell)\r\n}\r\nexport const handleMouseDown = (e, props) => {\r\n  props.d_mouseDown(props.cell)\r\n        handleSingleClick(e, props)\r\n}\r\nexport const handleMouseUp = (e, props) => {\r\n props.d_mouseUp(props.cell)\r\n\r\n}","import React from 'react'\r\nimport {\r\n    saveCell,\r\n    editCell,\r\n    toggleSelectCell,\r\n    unSelectAll,\r\n    selectCell,\r\n    cancelEditCellWithSave,\r\n    getWeather,\r\n    mouseEnterCell,\r\n    mouseDown,\r\n    mouseUp\r\n} from './../redux/actions'\r\nimport {connect} from 'react-redux'\r\nimport {handleCellKeyPress, handleDoubleClick, onInputChange,handleMouseEnter,\r\nhandleMouseDown,\r\nhandleMouseUp} from './misc/eventHandlers'\r\n\r\nclass Cell extends React.Component {\r\n\r\n    \r\n    handleCellKeyPress = e => handleCellKeyPress(e, this.props)\r\n    handleDoubleClick = e => handleDoubleClick(e, this.props)\r\n    onInputChange = e => onInputChange(e, this.props)\r\n    handleMouseEnter = e => handleMouseEnter(e, this.props)\r\n    handleMouseDown = e => handleMouseDown(e, this.props)\r\n    handleMouseUp = e => handleMouseUp(e, this.props)\r\n    render() {\r\n        return (\r\n            <td\r\n                \r\n                onMouseEnter={this.handleMouseEnter}>{(this.props.cell.inEdit)\r\n                    ? <input\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            onKeyDown={this.handleCellKeyPress}\r\n                            onChange={this.onInputChange}\r\n                            defaultValue={this.props.cell.value}/>\r\n                    : this.props.cell.isSelected\r\n                        ? <label\r\n                                tabIndex={-1}\r\n                                onMouseDown={this.handleMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n                                onKeyDown={this.handleCellKeyPress}\r\n                                onDoubleClick={this.handleDoubleClick}\r\n                                style={{\r\n                                backgroundColor: 'rgba(6, 150, 233, 0.2)'\r\n                            }}>{this.props.cell.value}</label>\r\n                        : <label tabIndex={0} onMouseDown={this.handleMouseDown}\r\n                onMouseUp={this.handleMouseUp} onDoubleClick={this.handleDoubleClick}>{this.props.cell.value}</label>\r\n}</td>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cell: state.spreadsheetState.table[ownProps.y][ownProps.x],\r\n    totalColumns: state.spreadsheetState.table[0].length,\r\n    isMouseDown: state.spreadsheetState.isMouseDown\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return ({\r\n        saveCellContent: cell => dispatch(saveCell(cell)),\r\n        enterEditContent: cell => dispatch(editCell(cell)),\r\n        toggleSelectContent: cell => dispatch(toggleSelectCell({x: cell.x, y: cell.y})),\r\n        selectContent: cell => dispatch(selectCell({x: cell.x, y: cell.y})),\r\n        unSelectAllContent: () => dispatch(unSelectAll()),\r\n        cancelEditContent: (save) => dispatch(cancelEditCellWithSave(save)),\r\n        getContentWeather: (city, cell) => dispatch(getWeather(city, cell)),\r\n        _mouseEnter: (cell) => dispatch(mouseEnterCell(cell)),\r\n        d_mouseDown: (cell) => dispatch(mouseDown(cell)),\r\n        d_mouseUp: (cell) => dispatch(mouseUp(cell))\r\n    })\r\n}\r\n\r\n// Compares Cells\r\nconst isTheSameCell = (oldProp, newProp) => (oldProp.cell.value === newProp.cell.value && oldProp.cell.isSelected === newProp.cell.isSelected && oldProp.cell.inEdit === newProp.cell.inEdit && oldProp.cell.tempValue === newProp.cell.tempValue)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {areStatePropsEqual: isTheSameCell})(Cell);\r\n","import React, { PureComponent } from 'react'\r\nimport Cell from './Cell'\r\nexport default class Row extends PureComponent {\r\n  render() {\r\n    return (\r\n      <tr><th>{this.props.y}</th>\r\n        {this.props.row.map((cell, index) => <Cell key={`${index},${this.props.y}`} y={this.props.y} x={index}/>)}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TableHeader(props) {\r\n  \r\n    return (\r\n        <tr>{<th>{\"\\\\\"}</th> }{\r\n        headerGenerator(props.columns).map(col =><th key={col}>{col}</th>)}</tr>\r\n    )\r\n}\r\n\r\nconst headerGenerator = (columns) => {\r\n    let myHeaders = []\r\n    let alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('');\r\n    let alphabetIndex = -1;\r\n    let loop = 1;\r\n    for (let index = 0; index < columns; index++) {\r\n        alphabetIndex++;\r\n        let col = \"\";\r\n        for (let j = 0; j < loop; j++) {\r\n            col += (alphabet[alphabetIndex]);\r\n        }\r\n        if (alphabetIndex === 25) {\r\n            loop++;\r\n            alphabetIndex = -1;\r\n        }\r\n\r\n        myHeaders.push(col);\r\n    }\r\n    return myHeaders;\r\n}\r\n","import React, {PureComponent} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Row from './Row'\r\nimport {A_KEY, DELETE_KEY,BACKSPACE_KEY} from './misc/keys'\r\nimport {selectAll, deleteSelectedCells, toggleSelectCell, selectCell} from './../redux/actions'\r\nimport {handleTableKeyDown} from './misc/eventHandlers'\r\nimport TableHeader from './misc/TableHeader';\r\n\r\nimport './css/Sheet.css';\r\nclass Sheet extends PureComponent {\r\n\r\nhandleTableKeyDown = e => handleTableKeyDown(e, this.props)\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <table onKeyDown={this.handleTableKeyDown}>\r\n      <thead><TableHeader columns={this.props.data.columns}/></thead>\r\n        <tbody>\r\n          \r\n          {this\r\n            .props\r\n            .data.table\r\n            .map((row, index) => <Row key={index} y={index} row={row}/>)}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return ({\r\n    selectAllContent: () => dispatch(selectAll()),\r\n    deletedSelectedContent: () => dispatch(deleteSelectedCells()),\r\n    toggleSelectContent: (x,y) => dispatch(toggleSelectCell({x:x, y:y})),\r\n    selectContent: (x,y) => dispatch(selectCell({x:x, y:y})),\r\n\r\n\r\n  })\r\n}\r\n\r\nconst mapStateToProps = (state) => ({data: state.spreadsheetState})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sheet);","import React, { Component } from 'react';\n\n\nimport Sheet from './spreadsheet/Sheet'\n\nclass App extends Component {\n  render() {\n    return (\n    <Sheet/>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n    TOGGLE_CELL_SELECT,\r\n    SAVE_CELL_CONTENT,\r\n    SELECT_CELL,\r\n    DELETE_SELECTED_CELLS,\r\n    EDIT_CELL,\r\n    SELECT_ALL,\r\n    UNSELECT_ALL,\r\n    CANCEL_EDIT_CELL,\r\n    ON_MOUSE_DOWN,\r\n    ON_MOUSE_UP,\r\n    MOUSE_ENTER_CELL\r\n} from './actions'\r\n\r\nimport {\r\n    config\r\n} from '../spreadsheet/misc/tableConfig'\r\n\r\n\r\n//TODO: Refactor reducer using array of selected cells.\r\nconst initializeState = (rows, columns, cell) => {\r\n\r\n    let table = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        let column = [];\r\n        for (let j = 0; j < columns; j++) {\r\n            column.push({ ...cell,\r\n                tempValue: cell.value,\r\n                x: j,\r\n                y: i\r\n            })\r\n        }\r\n\r\n        table.push(column)\r\n    }\r\n    return {\r\n        table,\r\n        columns,\r\n        rows,\r\n        selectedCells: [],\r\n        isMouseDown: false,\r\n        selectionSquare: {}\r\n\r\n    };\r\n}\r\n\r\nconst INITIAL_STATE = initializeState(config.rows, config.columns, config.cell)\r\n\r\n\r\nconst modifyCell = (state, newCell) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (newCell.x === i && newCell.y === j) {\r\n                    return newCell;\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst deleteSelectedCells = (state) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (cell.isSelected) {\r\n                    return { ...cell,\r\n                        value: \"\"\r\n                    };\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst modifySelection = (state, status) => (Object.assign({}, { ...state,\r\n    table: state.table.map((row, j) => {\r\n        return row.map((cell, i) => {\r\n            return { ...cell,\r\n                isSelected: status\r\n            }\r\n        })\r\n    })\r\n}))\r\nconst cancelCellEdit = (state, save) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (cell.inEdit) {\r\n                    if (save) {\r\n                        return { ...cell,\r\n                            value: cell.tempValue,\r\n                            inEdit: false\r\n                        };\r\n                    } else {\r\n                        return {\r\n                            ...cell,\r\n                            tempValue: \"\",\r\n                            inEdit: false\r\n\r\n                        }\r\n                    }\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst toggleCell = (state, coord) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (coord.x === i && coord.y === j) {\r\n                    return { ...cell,\r\n                        isSelected: !cell.isSelected\r\n                    };\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst selectCell = (state, coord) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (coord.x === i && coord.y === j) {\r\n\r\n                    return { ...cell,\r\n                        isSelected: true\r\n                    };\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst changeCoveredCells = (state, square) => {\r\n    let cells = state.table;\r\n    return cells.map((row, y) => row.map((cell, x) => {\r\n        if (x >= square.x0 && x <= square.x1) {\r\n            if (y >= square.y0 && y <= square.y1) {\r\n                return { ...cell,\r\n                    isSelected: true\r\n                }\r\n            } else return {...cell,isSelected:false}\r\n        } else return {...cell,isSelected:false}\r\n    }))\r\n\r\n}\r\nconst mouseEnterCell = (state, action) => {\r\n    if (state.isMouseDown) {\r\n        const newSquare = getSelectionSquare(state.selectionSquare, action.cell)\r\n        const newTable = changeCoveredCells(state, newSquare.selectionSquare)\r\n        return { ...state,\r\n            table: newTable,\r\n            selectionSquare: { ...newSquare.selectionSquare\r\n            }\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\nconst getSelectionSquare = (selectionSquare, newCell) => {\r\n\r\n    if (Object.keys(selectionSquare).length !== 0) {\r\n        let {\r\n            x0,\r\n            x1,\r\n            y0,\r\n            y1,\r\n            _x,_y\r\n        } = selectionSquare;\r\n        if (newCell.x>_x){\r\n            if(newCell.y<=_y){\r\n                x0=_x\r\n                x1=newCell.x\r\n                y0=newCell.y\r\n                y1=_y\r\n            }\r\n            else{\r\n                y0=_y\r\n                x1=newCell.x\r\n                y1=newCell.y\r\n            }\r\n        }\r\n        else if(newCell.x<=_x){\r\n                if(newCell.y<=_y){\r\n                    x0=newCell.x\r\n                    x1=_x\r\n                    y0=newCell.y\r\n                    y1=_y\r\n            }\r\n            else  {\r\n                x0=newCell.x\r\n                x1=_x\r\n                y1=newCell.y\r\n            }\r\n        }\r\n        return {\r\n                selectionSquare: {\r\n                   x0: x0,\r\n                    x1: x1,\r\n                    y0: y0,\r\n                    y1: y1,\r\n                    _x:_x,\r\n                    _y:_y\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\nconst save = (state, action) => modifyCell(state, action.cell)\r\nconst edit = (state, action) => modifyCell(state, action.cell)\r\nconst toggleSelect = (state, action) => toggleCell(state, action.coord)\r\nconst select = (state, action) => selectCell(state, action.coord)\r\nconst cancel = (state, action) => cancelCellEdit(state, action.save)\r\n\r\nconst emptySelected = (state) => deleteSelectedCells(state)\r\nconst selectAll = (state) => modifySelection(state, true)\r\nconst unselectAll = (state) => modifySelection(state, false)\r\n\r\nconst mouseDown = (state,cell) => (Object.assign({}, { ...state,\r\n    isMouseDown: true,\r\n            selectionSquare: {\r\n                x0: cell.x,\r\n                x1: cell.x,\r\n                y0: cell.y,\r\n                y1: cell.y,\r\n                _x: cell.x,\r\n                _y: cell.y,\r\n                \r\n            \r\n        \r\n    }\r\n}))\r\nconst mouseUp = (state,cell) => (Object.assign({}, { ...state,\r\n    isMouseDown: false, selectionSquare:{}\r\n}))\r\n\r\nconst spreadsheetReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SAVE_CELL_CONTENT:\r\n            return save(state, action)\r\n        case EDIT_CELL:\r\n            return edit(state, action)\r\n        case TOGGLE_CELL_SELECT:\r\n            return toggleSelect(state, action)\r\n        case SELECT_CELL:\r\n            return select(state, action)\r\n\r\n        case DELETE_SELECTED_CELLS:\r\n            return emptySelected(state)\r\n        case SELECT_ALL:\r\n            return selectAll(state)\r\n        case UNSELECT_ALL:\r\n            return unselectAll(state)\r\n        case CANCEL_EDIT_CELL:\r\n            return cancel(state, action)\r\n        case ON_MOUSE_DOWN:\r\n            return mouseDown(state,action.cell)\r\n        case ON_MOUSE_UP:\r\n            return mouseUp(state, action.cell)\r\n        case MOUSE_ENTER_CELL:\r\n            return mouseEnterCell(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default spreadsheetReducer;","\r\n// The config of the table that will be created. Size, default values, etc\r\n\r\nexport const config={columns:10, rows:10, cell:{ isSelected: false,\r\n            value: \"0\",\r\n            x: '0',\r\n            y: '0',\r\n            inEdit: false, tempValue:\"\"}}","import {\r\n    combineReducers\r\n} from 'redux';\r\nimport spreadsheetReducer from './spreadsheetReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    spreadsheetState: spreadsheetReducer\r\n});\r\n\r\nexport default rootReducer;","import thunkMiddleware from 'redux-thunk'\r\nimport {createLogger} from 'redux-logger'\r\nimport {createStore , applyMiddleware} from 'redux'\r\nimport rootReducers from './reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\n// Store with logger\r\nconst store = createStore(\r\n    rootReducers, applyMiddleware(loggerMiddleware, thunkMiddleware)\r\n);\r\n// const store = createStore(\r\n//     rootReducers, applyMiddleware( thunkMiddleware)\r\n// );\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\nReactDOM.render(\n   <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}