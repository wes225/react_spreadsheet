{"version":3,"sources":["spreadsheet/misc/keys.js","redux/actions.js","spreadsheet/Cell.js","spreadsheet/Row.js","spreadsheet/misc/TableHeader.js","spreadsheet/Sheet.js","App.js","redux/spreadsheetReducer.js","spreadsheet/misc/tableConfig.js","redux/reducers.js","redux/store.js","index.js"],"names":["ENTER_KEY","ESCAPE_KEY","DELETE_KEY","BACKSPACE_KEY","A_KEY","saveCell","cell","type","apiKey","getWeather","city","requestingCell","dispatch","newX","x","cityName","fetch","concat","then","response","json","main","temp","error","console","log","getCityWeather","Object","objectSpread","value","tempValue","inEdit","Cell","handleCellKeyPress","e","_this","props","isSelected","enterEditContent","which","ctrlKey","totalColumns","getContentWeather","target","saveCellContent","cancelEditContent","unSelectAllContent","handleDoubleClick","handleSingleClick","toggleSelectContent","onInputChange","old","newCell","nextProp","this","isTheSameCell","react_default","a","createElement","onKeyDown","onChange","defaultValue","onClick","onDoubleClick","style","padding","border","React","Component","connect","state","ownProps","spreadsheetState","table","y","length","editCell","toggleSelectCell","save","cancelEditCellWithSave","Row","row","map","index","spreadsheet_Cell","key","PureComponent","TableHeader","headerGenerator","columns","col","myHeaders","alphabet","toUpperCase","split","alphabetIndex","loop","j","push","Sheet","handleKeyPress","selectAllContent","deletedSelectedContent","document","addEventListener","removeEventListener","data","Row_Row","App","spreadsheet_Sheet","INITIAL_STATE","rows","i","column","selectedCells","initializeState","modifyCell","assign","modifySelection","status","cancel","action","cancelCellEdit","emptySelected","deleteSelectedCells","spreadsheetReducer","arguments","undefined","toggleSelect","selectAll","unselectAll","rootReducer","combineReducers","store","createLogger","createStore","rootReducers","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.4a578782.chunk.js","sourcesContent":["export const ENTER_KEY = 13\r\nexport const TAB_KEY = 9\r\nexport const ESCAPE_KEY = 27\r\nexport const DELETE_KEY = 46\r\nexport const BACKSPACE_KEY = 8\r\nexport const A_KEY = 65","export const TOGGLE_CELL_SELECT = \"TOGGLE_CELL_SELECT\"\r\nexport const SELECT_ALL = \"SELECT_ALL\";\r\nexport const UNSELECT_ALL = \"UNSELECT_ALL\";\r\nexport const SAVE_CELL_CONTENT = \"SAVE_CELL_CONTENT\";\r\nexport const DELETE_SELECTED_CELLS = \"DELETE_SELECTED_CELLS\";\r\nexport const EDIT_CELL = \"EDIT_CELL\";\r\nexport const CANCEL_EDIT_CELL = \"CANCEL_EDIT_CELL\";\r\nexport const EDIT_SELECTED_CELL = \"EDIT_SELECTED_CELLS\";\r\n\r\nexport const saveCell = cell => ({\r\n    type: SAVE_CELL_CONTENT,\r\n    cell\r\n});\r\nexport const editCell = cell => ({\r\n    type: EDIT_CELL,\r\n    cell\r\n});\r\nexport const cancelEditCellWithSave = (save) => ({\r\n    type: CANCEL_EDIT_CELL,\r\n    save\r\n})\r\nexport const deleteSelectedCells = () => ({\r\n    type: DELETE_SELECTED_CELLS\r\n});\r\nexport const toggleSelectCell = cell => ({\r\n    type: TOGGLE_CELL_SELECT,\r\n    cell\r\n})\r\nexport const selectAll = () => ({\r\n    type: SELECT_ALL\r\n})\r\nexport const unSelectAll = () => ({\r\n    type: UNSELECT_ALL\r\n})\r\nexport const editSelected = () => ({\r\n    type: EDIT_SELECTED_CELL\r\n})\r\n\r\n\r\n// Weather Section\r\nconst apiKey = '8d76f2f18d23abbac32fec7038fb665c'\r\nexport function getWeather(city, requestingCell) {\r\n    return dispatch => {\r\n          let newX = requestingCell.x + 1\r\n        getCityWeather(city).then(temp => {\r\n\r\n  // Modifies the cell on the right of the city name\r\n         dispatch(saveCell({ ...requestingCell,\r\n            x: newX,\r\n            value: temp+\"°C\" , tempValue:temp+\"°C \", inEdit:false\r\n        })) ;\r\n        \r\n        });  \r\n       \r\n    }\r\n}\r\n\r\n function getCityWeather(cityName) {\r\n     try {\r\n    \r\n    return    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${apiKey}&units=metric`)\r\n        .then(response =>  response.json()\r\n        .then(json=> json.main.temp))\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n","import React from 'react'\r\nimport { ENTER_KEY, ESCAPE_KEY } from './misc/keys'\r\nimport {\r\n    saveCell,\r\n    editCell,\r\n    toggleSelectCell,\r\n    unSelectAll,\r\n    cancelEditCellWithSave,\r\n    getWeather\r\n} from './../redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Cell extends React.Component {\r\n\r\n    // Compares Cells \r\n    isTheSameCell(old, newCell) {\r\n        return (old.value === newCell.value && old.isSelected === newCell.isSelected && old.inEdit === newCell.inEdit && old.tempValue === newCell.tempValue)\r\n    }\r\n    // prevents unecessary re-rendering using the previous func\r\n    shouldComponentUpdate(nextProp) {\r\n        return !this.isTheSameCell(this.props.cell, nextProp.cell)\r\n    }\r\n    handleCellKeyPress = e => {\r\n\r\n        // To finish; will help editing once a case is selected.\r\n        if (this.props.isSelected) {\r\n            this\r\n                .props\r\n                .enterEditContent({\r\n                    ...this.props.cell,\r\n                    inEdit: true\r\n                });\r\n        } else if (this.props.cell.inEdit) {\r\n\r\n            // Get Weather condition\r\n            if (e.which === ENTER_KEY && e.ctrlKey) {\r\n                if (this.props.cell.x<this.props.totalColumns){\r\n                this\r\n                    .props\r\n                    .getContentWeather(e.target.value, this.props.cell)\r\n                this\r\n                    .props\r\n                    .saveCellContent({\r\n                        ...this.props.cell,\r\n                        value: e.target.value,\r\n                        inEdit: false\r\n                    })}\r\n            }\r\n            // Saves change made to cell\r\n            if (e.which === ENTER_KEY) {\r\n                this\r\n                    .props\r\n                    .saveCellContent({\r\n                        ...this.props.cell,\r\n                        value: e.target.value,\r\n                        inEdit: false\r\n                    })\r\n            }\r\n\r\n            //Cancel changes\r\n            if (e.which === ESCAPE_KEY) {\r\n                this\r\n                    .props\r\n                    .cancelEditContent(false);\r\n                this\r\n                    .props\r\n                    .unSelectAllContent();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Enters edit mode for the cell\r\n    handleDoubleClick = (e) => {\r\n        this\r\n            .props\r\n            .cancelEditContent(true)\r\n        this\r\n            .props\r\n            .enterEditContent({\r\n                ...this.props.cell,\r\n                inEdit: true\r\n            });\r\n        this\r\n            .props\r\n            .unSelectAllContent();\r\n    }\r\n\r\n    // Handles selected one or multiple cases.\r\n    handleSingleClick = (e) => {\r\n        this\r\n            .props\r\n            .cancelEditContent(true)\r\n        if (e.ctrlKey) {\r\n            this\r\n                .props\r\n                .toggleSelectContent({\r\n                    ...this.props.cell,\r\n                    inEdit: false,\r\n                    isSelected: !this.props.cell.isSelected\r\n                })\r\n        } else {\r\n            this\r\n                .props\r\n                .unSelectAllContent();\r\n            this\r\n                .props\r\n                .toggleSelectContent({\r\n                    ...this.props.cell,\r\n                    inEdit: false,\r\n                    isSelected: !this.props.cell.isSelected\r\n                })\r\n        }\r\n    }\r\n\r\n    // Saves current input, for when user clicks away to save\r\n    onInputChange = e => {\r\n        this\r\n            .props\r\n            .saveCellContent({\r\n                ...this.props.cell,\r\n                tempValue: e.target.value\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <td onKeyDown={this.handleCellKeyPress}>{(this.props.cell.inEdit)\r\n                ? <input\r\n                    type=\"text\"\r\n                    onChange={this.onInputChange}\r\n                    defaultValue={this.props.cell.value} />\r\n                : this.props.cell.isSelected\r\n                    ? <label\r\n                        onClick={this.handleSingleClick}\r\n                        onDoubleClick={this.handleDoubleClick}\r\n                        style={{\r\n                            padding:'5px',\r\n                            border: '2px solid rgba(6, 150, 233, 0.815)'\r\n                        }}>{this.props.cell.value}</label>\r\n                    : <label onClick={this.handleSingleClick} onDoubleClick={this.handleDoubleClick}\r\n                    style={{padding:'5px',\r\n                            border: '2px solid transparent'}}>{this.props.cell.value}</label>\r\n            }</td>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    cell: state.spreadsheetState.table[ownProps.y][ownProps.x],\r\n    totalColumns:state.spreadsheetState.table[0].length\r\n})\r\nconst mapDispatchToProps = dispatch => {\r\n    return ({\r\n        saveCellContent: cell => dispatch(saveCell(cell)),\r\n        enterEditContent: cell => dispatch(editCell(cell)),\r\n        toggleSelectContent: cell => dispatch(toggleSelectCell(cell)),\r\n        unSelectAllContent: () => dispatch(unSelectAll()),\r\n        cancelEditContent: (save) => dispatch(cancelEditCellWithSave(save)),\r\n        getContentWeather: (city, cell) => dispatch(getWeather(city, cell))\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);","import React, { PureComponent } from 'react'\r\nimport Cell from './Cell'\r\nexport default class Row extends PureComponent {\r\n  render() {\r\n    return (\r\n      <tr><th>{this.props.y}</th>\r\n        {this.props.row.map((cell, index) => <Cell key={`${index},${this.props.y}`} y={this.props.y} x={index}/>)}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TableHeader(props) {\r\n  \r\n    return (\r\n        <tr>{<th>{\"\\\\\"}</th> }{\r\n        headerGenerator(props.columns).map(col =><th key={col}>{col}</th>)}</tr>\r\n    )\r\n}\r\n\r\nconst headerGenerator = (columns) => {\r\n    let myHeaders = []\r\n    let alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n        .toUpperCase()\r\n        .split('');\r\n    let alphabetIndex = -1;\r\n    let loop = 1;\r\n    for (let index = 0; index < columns; index++) {\r\n        alphabetIndex++;\r\n        let col = \"\";\r\n        for (let j = 0; j < loop; j++) {\r\n            col += (alphabet[alphabetIndex]);\r\n        }\r\n        if (alphabetIndex === 25) {\r\n            loop++;\r\n            alphabetIndex = -1;\r\n        }\r\n\r\n        myHeaders.push(col);\r\n    }\r\n    return myHeaders;\r\n}\r\n","import React, {PureComponent} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Row from './Row'\r\nimport {A_KEY, DELETE_KEY,BACKSPACE_KEY} from './misc/keys'\r\nimport {selectAll, deleteSelectedCells} from './../redux/actions'\r\nimport TableHeader from './misc/TableHeader';\r\n\r\nimport './css/Sheet.css';\r\nclass Sheet extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress, false);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress, false);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n  \r\n    if (e.ctrlKey) {\r\n      if(e.which===A_KEY) {\r\n          this\r\n            .props\r\n            .selectAllContent()\r\n      }\r\n    }\r\n    if (e.which === DELETE_KEY || e.which === BACKSPACE_KEY) {\r\n      this\r\n        .props\r\n        .deletedSelectedContent({})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table onKeyDown={this.handleKeyPress}>\r\n      <thead><TableHeader columns={this.props.data.columns}/></thead>\r\n        <tbody>\r\n          \r\n          {this\r\n            .props\r\n            .data.table\r\n            .map((row, index) => <Row key={index} y={index} row={row}/>)}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return ({\r\n    selectAllContent: () => dispatch(selectAll()),\r\n    deletedSelectedContent: () => dispatch(deleteSelectedCells())\r\n  })\r\n}\r\n\r\nconst mapStateToProps = (state) => ({data: state.spreadsheetState})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sheet);","import React, { Component } from 'react';\n\n\nimport Sheet from './spreadsheet/Sheet'\n\nclass App extends Component {\n  render() {\n    return (\n    <Sheet/>\n    );\n  }\n}\n\nexport default App;\n","import {\r\n    TOGGLE_CELL_SELECT,\r\n    SAVE_CELL_CONTENT,\r\n    DELETE_SELECTED_CELLS,\r\n    EDIT_CELL,\r\n    SELECT_ALL,\r\n    UNSELECT_ALL,\r\n    CANCEL_EDIT_CELL\r\n} from './actions'\r\n\r\nimport {config} from '../spreadsheet/misc/tableConfig'\r\n\r\n\r\n//TODO: Refactor reducer using array of selected cells.\r\nconst initializeState = (rows,columns,cell) => {\r\n\r\n    let table=[];\r\n     for( let i=0 ; i<rows ;i++){\r\n        let column =[];\r\n        for (let j=0; j<columns;j++){\r\n            column.push({...cell,tempValue:cell.value,x:j,y:i})\r\n        }\r\n      \r\n        table.push(column)\r\n    }\r\n    return {table,columns,rows, selectedCells:[]};\r\n}\r\n\r\nconst INITIAL_STATE = initializeState(config.rows,config.columns,config.cell)\r\n\r\n\r\nconst modifyCell = (state, newCell) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (newCell.x === i && newCell.y === j) {\r\n                    return newCell;\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst deleteSelectedCells = (state) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (cell.isSelected) {\r\n                    return { ...cell,\r\n                        value: \"\"\r\n                    };\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nconst modifySelection = (state, status) => (Object.assign({}, { ...state,\r\n    table: state.table.map((row, j) => {\r\n        return row.map((cell, i) => {\r\n            return { ...cell,\r\n                isSelected: status\r\n            }\r\n        })\r\n    })\r\n}))\r\nconst cancelCellEdit  = (state, save) => {\r\n    return Object.assign({}, { ...state,\r\n        table: state.table.map((row, j) => {\r\n            return row.map((cell, i) => {\r\n                if (cell.inEdit) {\r\n                    if (save){\r\n                    return { ...cell,\r\n                        value: cell.tempValue, inEdit:false\r\n                    };} else {\r\n                        return {\r\n...cell,\r\n                        value: \"\", tempValue:\"\", inEdit:false\r\n                    \r\n                        }\r\n                    }\r\n                } else {\r\n                    return cell;\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\nconst save = (state, action) => modifyCell(state, action.cell)\r\nconst edit = (state, action) => modifyCell(state, action.cell)\r\nconst toggleSelect = (state, action) => modifyCell(state, action.cell)\r\nconst cancel = (state,action) => cancelCellEdit(state,action.save)\r\n\r\nconst emptySelected = (state) => deleteSelectedCells(state)\r\nconst selectAll = (state) => modifySelection(state, true)\r\nconst unselectAll = (state) => modifySelection(state, false)\r\n\r\n\r\nconst spreadsheetReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SAVE_CELL_CONTENT:\r\n            return save(state, action)\r\n        case EDIT_CELL:\r\n            return edit(state, action)\r\n        case TOGGLE_CELL_SELECT:\r\n            return toggleSelect(state, action)\r\n\r\n        case DELETE_SELECTED_CELLS:\r\n            return emptySelected(state)\r\n        case SELECT_ALL:\r\n            return selectAll(state)\r\n        case UNSELECT_ALL:\r\n            return unselectAll(state)\r\n        case CANCEL_EDIT_CELL:\r\n            return cancel(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default spreadsheetReducer;","\r\n// The config of the table that will be created. Size, default values, etc\r\n\r\nexport const config={columns:10, rows:10, cell:{ isSelected: false,\r\n            value: \"0\",\r\n            x: '0',\r\n            y: '0',\r\n            inEdit: false, tempValue:\"\"}}","import {\r\n    combineReducers\r\n} from 'redux';\r\nimport spreadsheetReducer from './spreadsheetReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    spreadsheetState: spreadsheetReducer\r\n});\r\n\r\nexport default rootReducer;","import thunkMiddleware from 'redux-thunk'\r\nimport {createLogger} from 'redux-logger'\r\nimport {createStore , applyMiddleware} from 'redux'\r\nimport rootReducers from './reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\n// Store with logger\r\n// const store = createStore(\r\n//     rootReducers, applyMiddleware(loggerMiddleware, thunkMiddleware)\r\n// );\r\nconst store = createStore(\r\n    rootReducers, applyMiddleware( thunkMiddleware)\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\nReactDOM.render(\n   <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}